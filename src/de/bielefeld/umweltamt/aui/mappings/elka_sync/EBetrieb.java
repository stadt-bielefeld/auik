/**
 * Copyright 2005-2011, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */
package de.bielefeld.umweltamt.aui.mappings.elka_sync;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonIgnore;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;
import de.bielefeld.umweltamt.aui.mappings.basis.Adresse;
import de.bielefeld.umweltamt.aui.mappings.basis.Standort;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.Massnahme;
import de.bielefeld.umweltamt.aui.mappings.oberflgw.ZBetriebMassnahme;
import de.bielefeld.umweltamt.aui.HibernateSessionFactory;

// Generated 22.10.2015 16:17:13 by Hibernate Tools 3.4.0.CR1

/**
 * EBetrieb generated by hbm2java
 */
public class EBetrieb implements java.io.Serializable {

    private EStandort standort;
    private Integer nr;
    private Integer origNr;
    private EAdresse adresseByWrAdrNr;
    private String bezeichnung;
    private Boolean suevkanTog;
    private Float e32;
    private Float n32;
    private Date aktualDat;
    private Date erstellDat;
    private String herkunft;
    private Integer objektId;

    private Set<Massnahme> massnahmes;

    public EBetrieb() {
    }

    public EBetrieb(Integer nr) {
        this.nr = nr;
    }

    public EBetrieb(Integer nr, EStandort standort, Integer origNr,
            EAdresse adresseByWrAdrNr, String bezeichnung, Boolean suevkanTog,
            Float e32, Float n32, Date aktualDat, Date erstellDat,
            String herkunft) {
        this.standort = standort;
        this.nr = nr;
        this.origNr = origNr;
        this.adresseByWrAdrNr = adresseByWrAdrNr;
        this.bezeichnung = bezeichnung;
        this.suevkanTog = suevkanTog;
        this.e32 = e32;
        this.n32 = n32;
        this.aktualDat = aktualDat;
        this.erstellDat = erstellDat;
        this.herkunft = herkunft;
    }

    public Integer getNr() {
        return this.nr;
    }

    public void setNr(Integer nr) {
        this.nr = nr;
    }

    @JsonIgnore
    public Integer getOrigNr() {
        return this.origNr;
    }

    @JsonIgnore
    public void setOrigNr(Integer origNr) {
        this.origNr = origNr;
    }

    public EStandort getStandort() {
        return this.standort;
    }

    public void setStandort(EStandort standort) {
        this.standort = standort;
    }

    public EAdresse getAdresseByWrAdrNr() {
        return this.adresseByWrAdrNr;
    }

    public void setAdresseByWrAdrNr(EAdresse adresseByWrAdrNr) {
        this.adresseByWrAdrNr = adresseByWrAdrNr;
    }

    public String getBezeichnung() {
        return this.bezeichnung;
    }

    public void setBezeichnung(String bezeichnung) {
        this.bezeichnung = bezeichnung;
    }

    public Boolean getSuevkanTog() {
        return this.suevkanTog;
    }

    public void setSuevkanTog(Boolean suevkanTog) {
        this.suevkanTog = suevkanTog;
    }

    public Integer getE32() {
        return Math.round(this.e32);
    }

    public void setE32(Float e32) {
        this.e32 = e32;
    }

    public Integer getN32() {
        return Math.round(this.n32);
    }

    public void setN32(Float n32) {
        this.n32 = n32;
    }

    public Date getAktualDat() {
        return this.aktualDat;
    }

    public void setAktualDat(Date aktualDat) {
        this.aktualDat = aktualDat;
    }

    public Date getErstellDat() {
        return this.erstellDat;
    }

    public void setErstellDat(Date erstellDat) {
        this.erstellDat = erstellDat;
    }

    public String getHerkunft() {
        return this.herkunft;
    }

    public void setHerkunft(String herkunft) {
        this.herkunft = herkunft;
    }

    public Integer getObjektId() {
        return objektId;
    }

    public void setObjektId(Integer objektId) {
        this.objektId = objektId;
    }

    /**
     * Update this EAbwasserbehandlungsanlage with its new values.<br>
     * This is meant to be used after merging!
     * @param copy AtlKlaeranlagen
     */
    private void copy(EBetrieb copy) {
        this.bezeichnung = copy.getBezeichnung();
        this.e32 = copy.getE32().floatValue();
        this.n32 = copy.getN32().floatValue();
        this.nr = copy.getNr();
        this.standort = copy.getStandort();
        this.suevkanTog = copy.getSuevkanTog();
        this.adresseByWrAdrNr = copy.getAdresseByWrAdrNr();
        this.aktualDat = copy.getAktualDat();
        this.erstellDat = copy.getErstellDat();
        this.herkunft = copy.getHerkunft();
    }

    /**
     * Find an <code>AtlKlaeranlagen</code> instance by its primary key
     * @param id the primary key value
     * @return <code>AtlKlaeranlagen</code> the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static EBetrieb findById(java.lang.Integer id) {
        return (EBetrieb)
            new DatabaseAccess().get(EBetrieb.class, id);
    }

    /**
     * Get a list of all <code>AtlKlaeranlagen</code>
     * @return <code>List&lt;AtlKlaeranlagen&gt;</code>
     *         all <code>AtlKlaeranlagen</code>
     */
    public static List<EBetrieb> getAll() {
        return DatabaseQuery.getAll(new EBetrieb());
    }

    /* Custom code goes below here! */

    /**
     * Returns the Massnahme instances connected to the Adresse table entry
     * on which this instance is based on.
     * @return The instances as set
     */
    public Set<Massnahme> getMassnahmes() {
        Integer origId = getOrigNr() != null ? getOrigNr() : getNr();

        if (massnahmes != null) {
            return massnahmes;
        } else {
            massnahmes = new HashSet<Massnahme>(0);
            List<ZBetriebMassnahme> zBetriebMassnahmes = HibernateSessionFactory.currentSession().createQuery(
                "from ZBetriebMassnahme where betrieb_nr= " + origId).list();
            for (ZBetriebMassnahme zbm : zBetriebMassnahmes) {
                massnahmes.add(zbm.getMassnahme());
            }
            return massnahmes;
        }
    }
}
