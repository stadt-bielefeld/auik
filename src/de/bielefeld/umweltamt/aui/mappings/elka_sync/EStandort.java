/**
 * Copyright 2005-2011, Stadt Bielefeld
 *
 * This file is part of AUIK (Anlagen- und Indirekteinleiter-Kataster).
 *
 * AUIK is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 2 of the License, or (at your
 * option) any later version.
 *
 * AUIK is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with AUIK. If not, see <http://www.gnu.org/licenses/>.
 *
 * AUIK has been developed by Stadt Bielefeld and Intevation GmbH.
 */
package de.bielefeld.umweltamt.aui.mappings.elka_sync;

import java.math.BigInteger;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;

import de.bielefeld.umweltamt.aui.mappings.DatabaseAccess;
import de.bielefeld.umweltamt.aui.mappings.DatabaseQuery;

// Generated 22.10.2015 16:17:13 by Hibernate Tools 3.4.0.CR1

/**
 * EStandort generated by hbm2java
 */
public class EStandort implements java.io.Serializable {

	private BigInteger nr;
	private BigInteger origNr;
	private EAdresse adresse;
	private String gemeindeId;
	private String gemarkung;
	private String flur;
	private String flurstuecke;
	private Float e32;
	private Float n32;
	private Boolean industrieabwasserTog;
	private Boolean niederschlagswasserTog;
	private Boolean kommunaleKaTog;
	private Boolean kleikaTog;
	private Boolean nurSbTog;
	private Date aktualDat;
	private Date erstellDat;
	private String herkunft;
	
	public EStandort() {
	}

	public EStandort(BigInteger nr) {
		this.nr = nr;
	}

	public EStandort(BigInteger nr, BigInteger origNr, EAdresse adresse,
			String gemeindeId, String gemarkung,
			String flur, String flurstuecke, Float e32, Float n32,
			Boolean industrieabwasserTog, Boolean niederschlagswasserTog,
			Boolean kommunaleKaTog, Boolean kleikaTog, Boolean nurSbTog,
			Date aktualDat, Date erstellDat, String herkunft) {
		this.nr = nr;
		this.origNr = origNr;
		this.adresse = adresse;
		this.gemeindeId = gemeindeId;
		this.gemarkung = gemarkung;
		this.flur = flur;
		this.flurstuecke = flurstuecke;
		this.e32 = e32;
		this.n32 = n32;
		this.industrieabwasserTog = industrieabwasserTog;
		this.niederschlagswasserTog = niederschlagswasserTog;
		this.kommunaleKaTog = kommunaleKaTog;
		this.kleikaTog = kleikaTog;
		this.nurSbTog = nurSbTog;
		this.aktualDat = aktualDat;
		this.erstellDat = erstellDat;
		this.herkunft = herkunft;
	}

	public BigInteger getNr() {
		return this.nr;
	}

	public void setNr(BigInteger nr) {
		this.nr = nr;
	}

	@JsonIgnore
	public BigInteger getOrigNr() {
		return this.origNr;
	}
	
	@JsonIgnore
	public void setOrigNr(BigInteger origNr) {
		this.origNr =  origNr;
	}
	
	public EAdresse getAdresse() {
		return adresse;
	}

	public void setAdresse(EAdresse adresse) {
		this.adresse = adresse;
	}

	public String getGemeindeId() {
		return this.gemeindeId;
	}

	public void setGemeindeId(String gemeindeId) {
		this.gemeindeId = gemeindeId;
	}

	public String getGemarkung() {
		return this.gemarkung;
	}

	public void setGemarkung(String gemarkung) {
		this.gemarkung = gemarkung;
	}

	public String getFlur() {
		return this.flur;
	}

	public void setFlur(String flur) {
		this.flur = flur;
	}

	public String getFlurstuecke() {
		return this.flurstuecke;
	}

	public void setFlurstuecke(String flurstuecke) {
		this.flurstuecke = flurstuecke;
	}

	public Integer getE32() {
		return Math.round(this.e32);
	}

	public void setE32(Float e32) {
		this.e32 = e32;
	}

	public Integer getN32() {
		return Math.round(this.n32);
	}

	public void setN32(Float n32) {
		this.n32 = n32;
	}

	public Boolean getIndustrieabwasserTog() {
		return this.industrieabwasserTog;
	}

	public void setIndustrieabwasserTog(Boolean industrieabwasserTog) {
		this.industrieabwasserTog = industrieabwasserTog;
	}

	public Boolean getNiederschlagswasserTog() {
		return this.niederschlagswasserTog;
	}

	public void setNiederschlagswasserTog(Boolean niederschlagswasserTog) {
		this.niederschlagswasserTog = niederschlagswasserTog;
	}

	public Boolean getKommunaleKaTog() {
		return this.kommunaleKaTog;
	}

	public void setKommunaleKaTog(Boolean kommunaleKaTog) {
		this.kommunaleKaTog = kommunaleKaTog;
	}

	public Boolean getKleikaTog() {
		return this.kleikaTog;
	}

	public void setKleikaTog(Boolean kleikaTog) {
		this.kleikaTog = kleikaTog;
	}

	public Boolean getNurSbTog() {
		return this.nurSbTog;
	}

	public void setNurSbTog(Boolean nurSbTog) {
		this.nurSbTog = nurSbTog;
	}

	public Date getAktualDat() {
		return this.aktualDat;
	}

	public void setAktualDat(Date aktualDat) {
		this.aktualDat = aktualDat;
	}

	public Date getErstellDat() {
		return this.erstellDat;
	}

	public void setErstellDat(Date erstellDat) {
		this.erstellDat = erstellDat;
	}

	public String getHerkunft() {
		return this.herkunft;
	}

	public void setHerkunft(String herkunft) {
		this.herkunft = herkunft;
	}

    /**
     * Update this {@link EStandort} with its new values.<br>
     * This is meant to be used after merging!
     * @param copy {@link EStandort}
     */
    private void copy(EStandort copy) {
    	this.e32 = copy.getE32().floatValue();
    	this.flur = copy.getFlur();
    	this.flurstuecke = copy.getFlurstuecke();
    	this.gemarkung = copy.getGemarkung();
    	this.gemeindeId = copy.getGemeindeId();
    	this.industrieabwasserTog = copy.getIndustrieabwasserTog();
    	this.n32 = copy.getN32().floatValue();
    	this.nr = copy.getNr();
    	//this.aktualDat = copy.getAktualDat();
    	this.erstellDat = copy.getErstellDat();
    	this.herkunft = copy.getHerkunft();
    	this.kleikaTog = copy.getKleikaTog();
    	this.kommunaleKaTog = copy.getKommunaleKaTog();
    	this.niederschlagswasserTog = copy.getNiederschlagswasserTog();
    	this.nurSbTog = copy.getNurSbTog();
    }

    /**
     * Find an {@link EStandort} instance by its primary key
     * @param id the primary key value
     * @return {@link EStandort} the requested instance,
     *         if one exists,
     *         <code>null</code> otherwise
     */
    public static EStandort findById(BigInteger id) {
        return (EStandort)
            new DatabaseAccess().get(EStandort.class, id);
    }

    /**
     * Get a list of all {@link EStandort}
     * @return <code>List&lt;EStandort&gt;</code>
     *         all {@link EStandort}
     */
    public static List<EStandort> getAll() {
        return DatabaseQuery.getAll(new EStandort());
    }
}
